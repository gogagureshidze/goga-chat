{"ast":null,"code":"var _jsxFileName = \"/Users/gogagureshidze/Desktop/chat-app/src/context/ChatContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    chatId: 'null',\n    user: {}\n  };\n\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action.payload,\n          chatId: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatContextProvider, \"ZxGtdfwWRTEvoLdcqGGvBUH6T5o=\");\n\n_c = ChatContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"sources":["/Users/gogagureshidze/Desktop/chat-app/src/context/ChatContext.js"],"names":["createContext","useEffect","useState","auth","onAuthStateChanged","useContext","AuthContext","useReducer","ChatContext","ChatContextProvider","children","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","dispatch","data"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;;AACA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,EAAjC;AAEP,OAAO,MAAMS,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpD,QAAM;AAACC,IAAAA;AAAD,MAAgBN,UAAU,CAACC,WAAD,CAAhC;AAEI,QAAMM,aAAa,GAAG;AACjBC,IAAAA,MAAM,EAAE,MADS;AAEjBC,IAAAA,IAAI,EAAE;AAFW,GAAtB;;AAKA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,YAAOA,MAAM,CAACC,IAAd;AACI,WAAK,aAAL;AACA,eAAO;AACLJ,UAAAA,IAAI,EAAEG,MAAM,CAACE,OADR;AAELN,UAAAA,MAAM,EACJF,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GAAjC,GACIT,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GADrC,GAEIH,MAAM,CAACE,OAAP,CAAeC,GAAf,GAAqBT,WAAW,CAACS;AALlC,SAAP;;AAQA;AACA,eAAOJ,KAAP;AAXJ;AAaJ,GAdD;;AAgBA,QAAM,CAACA,KAAD,EAAQK,QAAR,IAAoBd,UAAU,CAACQ,WAAD,EAAcH,aAAd,CAApC;AACH,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEU,MAAAA,IAAI,EAAEN,KAAR;AAAeK,MAAAA;AAAf,KAA7B;AAAA,cACGX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { useReducer } from \"react\";\nexport const ChatContext = createContext();\n\nexport const ChatContextProvider = ({ children }) => {\n const {currentUser} = useContext(AuthContext)\n\n     const INITIAL_STATE = {\n          chatId: 'null',\n          user: {}\n     }\n\n     const chatReducer = (state, action) => {\n          switch(action.type) {\n              case \"CHANGE_USER\": \n              return {\n                user: action.payload,\n                chatId:\n                  currentUser.uid > action.payload.uid\n                    ? currentUser.uid + action.payload.uid\n                    : action.payload.uid + currentUser.uid,\n              };\n\n              default: \n              return state\n          } \n     }\n\n     const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return (\n    <ChatContext.Provider value={{ data: state, dispatch }}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}