{"ast":null,"code":"var _jsxFileName = \"/Users/gogagureshidze/Desktop/chat-app/src/components/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { useState } from \"react\";\nimport { arrayUnion, doc, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { ref } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input() {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid);\n      const uploadTask = upload;\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid,\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type something...\",\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Attach,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"none\"\n        },\n        type: \"file\",\n        id: \"file\",\n        onChange: e => setImg(e.target.files[1])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"GQZLLmpeDa1DywhUTdr/8cPHrB0=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/gogagureshidze/Desktop/chat-app/src/components/Input.jsx"],"names":["React","useContext","Img","Attach","AuthContext","ChatContext","useState","arrayUnion","doc","Timestamp","updateDoc","db","storage","v4","uuid","ref","Input","currentUser","data","text","setText","img","setImg","handleSend","storageRef","uploadTask","upload","chatId","messages","id","senderId","uid","date","now","e","target","value","display","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,oBAAtD;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,aAA5B;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,GAAT,QAAoB,kBAApB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAkBhB,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWjB,UAAU,CAACI,WAAD,CAA3B;AAEA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,IAAD,CAA9B;;AAEA,QAAMiB,UAAU,GAAG,YAAY;AAC7B,QAAGF,GAAH,EAAQ;AACN,YAAMG,UAAU,GAAGT,GAAG,CAACH,OAAD,EAAUE,IAAV,CAAtB;AACA,YAAMW,UAAU,GAAGC,MAAnB;AACD,KAHD,MAGO;AACL,YAAMhB,SAAS,CAACF,GAAG,CAACG,EAAD,EAAK,OAAL,EAAcO,IAAI,CAACS,MAAnB,CAAJ,EAAgC;AAC7CC,QAAAA,QAAQ,EAAErB,UAAU,CAAC;AACnBsB,UAAAA,EAAE,EAAEf,IADe;AAEnBK,UAAAA,IAFmB;AAGnBW,UAAAA,QAAQ,EAAEb,WAAW,CAACc,GAHH;AAInBC,UAAAA,IAAI,EAAEvB,SAAS,CAACwB,GAAV;AAJa,SAAD;AADyB,OAAhC,CAAf;AAQD;AACF,GAdD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,QAAQ,EAAGC,CAAD,IAAOd,OAAO,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEjC,MAAV;AAAkB,QAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAE;AAAEkC,UAAAA,OAAO,EAAE;AAAX,SADT;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAGH,CAAD,IAAOZ,MAAM,CAACY,CAAC,CAACC,MAAF,CAASG,KAAT,CAAe,CAAf,CAAD;AAJzB;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEpC,GAAV;AAAe,UAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AAAQ,QAAA,OAAO,EAAEqB,UAAU,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA5CQP,K;;KAAAA,K;AA8CT,eAAeA,KAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { useState } from \"react\";\nimport { arrayUnion, doc, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { ref } from \"firebase/storage\";\n\nfunction Input() {\n  const { currentUser } = useContext(AuthContext);\n  const { data } = useContext(ChatContext);\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const handleSend = async () => {\n    if(img) {\n      const storageRef = ref(storage, uuid)\n      const uploadTask = upload\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid,\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      })\n    }\n  };\n  return (\n    <div className=\"input\">\n      <input\n        type=\"text\"\n        placeholder=\"Type something...\"\n        onChange={(e) => setText(e.target.value)}\n      />\n      <div className=\"send\">\n        <img src={Attach} alt=\"\" />\n        <input\n          style={{ display: \"none\" }}\n          type=\"file\"\n          id=\"file\"\n          onChange={(e) => setImg(e.target.files[1])}\n        />\n        <label htmlFor=\"file\">\n          <img src={Img} alt=\"\" />\n        </label>\n        <button onClick={handleSend()}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}