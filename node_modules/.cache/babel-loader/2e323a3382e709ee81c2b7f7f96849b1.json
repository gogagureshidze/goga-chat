{"ast":null,"code":"var _jsxFileName = \"/Users/gogagureshidze/Desktop/chat-app/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const handleSearch = async () => {\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch();\n  };\n\n  const handleSelect = async () => {\n    // check if group(chats colection firestore) exist\n    // if not create a new one\n    //create user chats\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n    const res = await getDocs(db, \"chats\", co);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find a user\",\n        onKeyDown: handleKey,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"User not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"rW7pV+YZr3DuX3ksDkEh3s7eDqQ=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/gogagureshidze/Desktop/chat-app/src/components/Search.jsx"],"names":["React","useState","collection","query","where","getDocs","db","useContext","AuthContext","Search","username","setUsername","user","setUser","err","setErr","currentUser","handleSearch","q","querySnapshot","forEach","doc","data","handleKey","e","code","handleSelect","combinedId","uid","res","co","target","value","photoURL","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,QAAkD,oBAAlD;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,KAAD,CAA9B;AAEA,QAAM;AAACe,IAAAA;AAAD,MAAgBT,UAAU,CAACC,WAAD,CAAhC;;AAEA,QAAMS,YAAY,GAAG,YAAY;AAC/B,UAAMC,CAAC,GAAGf,KAAK,CACbD,UAAU,CAACI,EAAD,EAAK,OAAL,CADG,EAEbF,KAAK,CAAC,aAAD,EAAgB,IAAhB,EAAsBM,QAAtB,CAFQ,CAAf;;AAKA,QAAI;AACF,YAAMS,aAAa,GAAG,MAAMd,OAAO,CAACa,CAAD,CAAnC;AACAC,MAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BR,QAAAA,OAAO,CAACQ,GAAG,CAACC,IAAJ,EAAD,CAAP;AACD,OAFD;AAGD,KALD,CAKE,OAAOR,GAAP,EAAY;AACZC,MAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF,GAdD;;AAgBA,QAAMQ,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,IAAF,KAAW,OAAX,IAAsBR,YAAY,EAAlC;AACD,GAFD;;AAIA,QAAMS,YAAY,GAAG,YAAY;AAC/B;AACA;AAGA;AACA,UAAMC,UAAU,GAAGX,WAAW,CAACY,GAAZ,GAAkBhB,IAAI,CAACgB,GAAvB,GAA6BZ,WAAW,CAACY,GAAZ,GAAkBhB,IAAI,CAACgB,GAApD,GAA0DhB,IAAI,CAACgB,GAAL,GAAWZ,WAAW,CAACY,GAApG;AAEA,UAAMC,GAAG,GAAG,MAAMxB,OAAO,CAACC,EAAD,EAAK,OAAL,EAAcwB,EAAd,CAAzB;AACD,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,SAAS,EAAEP,SAHb;AAIE,QAAA,QAAQ,EAAGC,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACO,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EASGlB,GAAG,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATV,EAUGF,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAEc,YAAnC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEd,IAAI,CAACqB,QAAf;AAAyB,QAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAA,oBAAOrB,IAAI,CAACsB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1DQzB,M;;KAAAA,M;AA4DT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useContext } from \"react\";\nimport {AuthContext} from \"../context/AuthContext\"\n\nfunction Search() {\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n\n  const {currentUser} = useContext(AuthContext)\n\n  const handleSearch = async () => {\n    const q = query(\n      collection(db, \"users\"),\n      where(\"displayName\", \"==\", username)\n    );\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = (e) => {\n    e.code === \"Enter\" && handleSearch();\n  };\n\n  const handleSelect = async () => {\n    // check if group(chats colection firestore) exist\n    // if not create a new one\n\n\n    //create user chats\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid\n\n    const res = await getDocs(db, \"chats\", co)\n  };\n  return (\n    <div className=\"search\">\n      <div className=\"searchForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Find a user\"\n          onKeyDown={handleKey}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n      {err && <span>User not found</span>}\n      {user && (\n        <div className=\"userChat\" onClick={handleSelect}>\n          <img src={user.photoURL} alt=\"\" />\n          <div className=\"userChatInfo\">\n            <span>{user.displayName}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}