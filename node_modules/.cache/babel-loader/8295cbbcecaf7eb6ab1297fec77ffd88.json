{"ast":null,"code":"var _jsxFileName = \"/Users/gogagureshidze/Desktop/chat-app/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [err, setErr] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    setLoading(true);\n    e.preventDefault();\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      //Create user\n      const res = await createUserWithEmailAndPassword(auth, email, password); //Create a unique image name\n\n      const date = new Date().getTime();\n      const storageRef = ref(storage, `${displayName + date}`);\n      await uploadBytesResumable(storageRef, file).then(() => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          try {\n            //Update profile\n            await updateProfile(res.user, {\n              displayName,\n              photoURL: downloadURL\n            }); //create user on firestore\n\n            await setDoc(doc(db, \"users\", res.user.uid), {\n              uid: res.user.uid,\n              displayName,\n              email,\n              photoURL: downloadURL\n            }); //create empty user chats on firestore\n\n            await setDoc(doc(db, \"userChats\", res.user.uid), {});\n            navigate(\"/\");\n          } catch (err) {\n            console.log(err);\n            setErr(true);\n            setLoading(false);\n          }\n        });\n      });\n    } catch (err) {\n      setErr(true);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"Goga Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You do have an account? Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"1FzsGwIswnWuOUVEUjT/RJR2bp0=\", true);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/gogagureshidze/Desktop/chat-app/src/pages/Login.jsx"],"names":["React","Login","err","setErr","useState","loading","setLoading","navigate","useNavigate","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","createUserWithEmailAndPassword","auth","date","Date","getTime","storageRef","ref","storage","uploadBytesResumable","then","getDownloadURL","downloadURL","updateProfile","user","photoURL","setDoc","doc","db","uid","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction Login() {\n\n  const [err, setErr] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      //Create user\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n\n      //Create a unique image name\n      const date = new Date().getTime();\n      const storageRef = ref(storage, `${displayName + date}`);\n\n      await uploadBytesResumable(storageRef, file).then(() => {\n        getDownloadURL(storageRef).then(async (downloadURL) => {\n          try {\n            //Update profile\n            await updateProfile(res.user, {\n              displayName,\n              photoURL: downloadURL,\n            });\n            //create user on firestore\n            await setDoc(doc(db, \"users\", res.user.uid), {\n              uid: res.user.uid,\n              displayName,\n              email,\n              photoURL: downloadURL,\n            });\n\n            //create empty user chats on firestore\n            await setDoc(doc(db, \"userChats\", res.user.uid), {});\n            navigate(\"/\");\n          } catch (err) {\n            console.log(err);\n            setErr(true);\n            setLoading(false);\n          }\n        });\n      });\n    } catch (err) {\n      setErr(true);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <div className=\"formWrapper\">\n        <span className=\"logo\">Goga Chat</span>\n        <span className=\"title\">Login</span>\n        <form action=\"\">\n          <input type=\"email\" placeholder=\"email\" />\n          <input type=\"password\" placeholder=\"password\" />\n\n          <button>Sign in</button>\n        </form>\n        <p>You do have an account? Register</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}